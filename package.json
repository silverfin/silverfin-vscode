{
  "name": "silverfin-development-toolkit",
  "displayName": "Silverfin Development Toolkit",
  "version": "1.21.0",
  "publisher": "Silverfin",
  "icon": "resources/sf-icon.png",
  "engines": {
    "vscode": "^1.66.0"
  },
  "categories": [
    "Snippets",
    "Other",
    "Programming Languages"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/silverfin/silverfin-vscode.git"
  },
  "homepage": "https://github.com/silverfin/silverfin-vscode#readme",
  "activationEvents": [
    "workspaceContains:**/*.liquid"
  ],
  "main": "./out/extension.js",
  "extensionDependencies": [
    "redhat.vscode-yaml"
  ],
  "dependencies": {
    "@vscode/codicons": "^0.0.33",
    "@vscode/webview-ui-toolkit": "^1.2.2",
    "silverfin-cli": "github:silverfin/silverfin-cli",
    "yaml": "^2.2.2"
  },
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "silverfin-panel",
          "title": "Silverfin",
          "icon": "resources/sf-logo.svg"
        }
      ]
    },
    "views": {
      "silverfin-panel": [
        {
          "type": "webview",
          "id": "template-parts",
          "name": "Template Parts",
          "visibility": "visible"
        },
        {
          "type": "webview",
          "id": "template-info",
          "name": "Template Information",
          "visibility": "visible"
        },
        {
          "type": "webview",
          "id": "development",
          "name": "Development",
          "visibility": "visible"
        },
        {
          "type": "webview",
          "id": "firm-info",
          "name": "Firms",
          "visibility": "visible"
        }
      ]
    },
    "languages": [
      {
        "id": "liquid",
        "aliases": [
          "Silverfin Templating Language",
          "stl",
          "liquid",
          "silverfin liquid"
        ],
        "extensions": [
          ".liquid"
        ],
        "configuration": "./languages/language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "liquid",
        "scopeName": "source.stl",
        "path": "./syntaxes/stl.tmLanguage.json"
      }
    ],
    "yamlValidation": [
      {
        "fileMatch": [
          "*_liquid_test.yaml",
          "*_liquid_test.yml"
        ],
        "url": "./schemas/liquid-tests.schema.json"
      }
    ],
    "snippets": [
      {
        "language": "liquid",
        "path": "./snippets/liquid-template-snippets-drops.json"
      },
      {
        "language": "liquid",
        "path": "./snippets/liquid-template-snippets-filter.json"
      },
      {
        "language": "liquid",
        "path": "./snippets/liquid-template-snippets-html-table.json"
      },
      {
        "language": "liquid",
        "path": "./snippets/liquid-template-snippets-style.json"
      },
      {
        "language": "liquid",
        "path": "./snippets/liquid-template-snippets-tag.json"
      }
    ],
    "commands": [
      {
        "command": "silverfin-development-toolkit.runAllTests",
        "title": "Silverfin: run all liquid tests (without HTML output)"
      },
      {
        "command": "silverfin-development-toolkit.runTestWithOptionsInputHtml",
        "title": "Silverfin: run specific liquid test (with HTML output from Input view)"
      },
      {
        "command": "silverfin-development-toolkit.runTestWithOptionsPreviewHtml",
        "title": "Silverfin: run specific liquid test (with HTML output from Preview)"
      },
      {
        "command": "silverfin-development-toolkit.setFirm",
        "title": "Silverfin: set active firm ID"
      },
      {
        "command": "silverfin-development-toolkit.clearCurrentDiagnosticCollection",
        "title": "Silverfin: erase stored details of previous test runs (current file)"
      },
      {
        "command": "silverfin-development-toolkit.liquidLinter",
        "title": "Silverfin: verify liquid syntax (linter)"
      },
      {
        "command": "silverfin-development-toolkit.authorizeFirm",
        "title": "Silverfin: authorize firm"
      },
      {
        "command": "silverfin-development-toolkit.createTemplatesInBulk",
        "title": "Silverfin: create templates (Command)"
      },
      {
        "command": "silverfin-development-toolkit.importTemplatesInBulk",
        "title": "Silverfin: import templates (Command)"
      },
      {
        "command": "silverfin-development-toolkit.updateTemplatesInBulk",
        "title": "Silverfin: update templates (Command)"
      },
      {
        "command": "silverfin-development-toolkit.getTemplatesIdInBulk",
        "title": "Silverfin: get templates id (Command)"
      },
      {
        "command": "silverfin-development-toolkit.addSharedPartInBulk",
        "title": "Silverfin: add shared part to template (Command)"
      },
      {
        "command": "silverfin-development-toolkit.removeSharedPartInBulk",
        "title": "Silverfin: remove shared part from template (Command)"
      },
      {
        "command": "silverfin-development-toolkit.runCommandInBulk",
        "title": "Silverfin: select a command to run (Command)"
      }
    ],
    "keybindings": [
      {
        "command": "silverfin-development-toolkit.runAllTests",
        "key": "shift+alt+a",
        "mac": "shift+alt+a"
      },
      {
        "command": "silverfin-development-toolkit.runTestWithOptionsInputHtml",
        "key": "shift+alt+i",
        "mac": "shift+alt+i"
      },
      {
        "command": "silverfin-development-toolkit.runTestWithOptionsPreviewHtml",
        "key": "shift+alt+p",
        "mac": "shift+alt+p"
      },
      {
        "command": "silverfin-development-toolkit.clearCurrentDiagnosticCollection",
        "key": "shift+alt+e",
        "mac": "shift+alt+e"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "silverfin-development-toolkit.runAllTests",
          "when": "editorLangId == yaml && silverfin-development-toolkit.apiAuthorized"
        },
        {
          "command": "silverfin-development-toolkit.runTestWithOptionsInputHtml",
          "when": "editorLangId == yaml && silverfin-development-toolkit.apiAuthorized"
        },
        {
          "command": "silverfin-development-toolkit.runTestWithOptionsPreviewHtml",
          "when": "editorLangId == yaml && silverfin-development-toolkit.apiAuthorized"
        },
        {
          "command": "silverfin-development-toolkit.clearCurrentDiagnosticCollection",
          "when": "editorLangId == yaml && silverfin-development-toolkit.apiAuthorized"
        },
        {
          "command": "silverfin-development-toolkit.liquidLinter",
          "when": "editorLangId == liquid && silverfin-development-toolkit.apiAuthorized"
        },
        {
          "command": "silverfin-development-toolkit.setFirm",
          "when": "silverfin-development-toolkit.apiAuthorized"
        },
        {
          "command": "silverfin-development-toolkit.createTemplatesInBulk",
          "when": "silverfin-development-toolkit.apiAuthorized"
        },
        {
          "command": "silverfin-development-toolkit.importTemplatesInBulk",
          "when": "silverfin-development-toolkit.apiAuthorized"
        },
        {
          "command": "silverfin-development-toolkit.updateTemplatesInBulk",
          "when": "silverfin-development-toolkit.apiAuthorized"
        },
        {
          "command": "silverfin-development-toolkit.getTemplatesIdInBulk",
          "when": "silverfin-development-toolkit.apiAuthorized"
        },
        {
          "command": "silverfin-development-toolkit.addSharedPartInBulk",
          "when": "silverfin-development-toolkit.apiAuthorized"
        },
        {
          "command": "silverfin-development-toolkit.removeSharedPartInBulk",
          "when": "silverfin-development-toolkit.apiAuthorized"
        },
        {
          "command": "silverfin-development-toolkit.runCommandInBulk",
          "when": "silverfin-development-toolkit.apiAuthorized"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "node ./esbuild.js",
    "package": "NODE_ENV=production node ./esbuild.js",
    "watch": "node ./esbuild.js --watch",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "build:language-config": "node scripts/make-language-configuration"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.0",
    "@types/node": "14.x",
    "@types/vscode": "^1.66.0",
    "@types/vscode-webview": "^1.57.1",
    "@typescript-eslint/eslint-plugin": "^5.12.1",
    "@typescript-eslint/parser": "^5.12.1",
    "@vscode/test-electron": "^2.1.2",
    "esbuild": "^0.16.17",
    "eslint": "^8.56.0",
    "glob": "^7.2.0",
    "mocha": "^11.0.1",
    "typescript": "^4.5.5"
  },
  "prettier": {
    "trailingComma": "none"
  }
}
